{"version":3,"sources":["components/FooterComponent.jsx","components/HeaderComponent.jsx","services/QuestionService.js","components/ListQuestionComponent.jsx","services/QuestionServiceAllview.js","components/ListAllQuestionComponent.jsx","services/QuestionServiceDoneview.js","components/ListDoneQuestionComponent.jsx","components/AddQuestion.jsx","components/EditQuestionComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["FooterComponent","props","state","class","href","Component","HeaderComponent","type","id","to","axios","get","ListQuestionComponent","question_array","QuestionService","getQuestions","then","resp","setState","data","event","lonk","target","value","console","log","put","window","location","reload","className","this","map","name","link","diff","status","style","marginLeft","onClick","updatedata","bind","pathname","ListAllQuestionComponent","getAllQuestions","ListDoneQuestionComponent","question_done_array","QuestionDoneService","getDoneQuestions","AddQuestion","changeName","changeLink","changeStatus","changeDiff","saveQuestion","e","preventDefault","QuestoAdd","JSON","stringify","post","headers","placeholder","values","onChange","EditQuestionComponent","changeId","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd0b9cd6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass FooterComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n          this.state={\r\n\r\n          }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <footer >\r\n            <div class=\"card text-center\">\r\n            <div class=\"card-header\">\r\n              Featured\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">Codesmaster</h5>\r\n              <p class=\"card-text\"> Increase your potential with CodeDaily.</p>\r\n              <a href=\"#\" class=\"btn btn-primary\">Follow me</a>\r\n            </div>\r\n            <div class=\"card-footer text-muted\">\r\n                   Insta , fb  , github        \r\n            </div>\r\n          </div>\r\n          </footer>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default FooterComponent;","import React, { Component } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass HeaderComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\nthis.state={\r\n\r\n    }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <header>\r\n               <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <a class=\"navbar-brand\" href=\"\"><h4>CodeDaily</h4></a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n    <div class=\"navbar-nav\">\r\n    <Link to=\"\"><a class=\"nav-item nav-link \">To Do</a></Link>\r\n    <Link to=\"/done\"> <a class=\"nav-item nav-link\" >Done</a></Link>\r\n    <Link to=\"/All\"> <a class=\"nav-item nav-link\" href=\"All\">All</a></Link>\r\n    </div>\r\n  </div>\r\n</nav>\r\n            </header>\r\n            <br/>\r\n           \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default HeaderComponent;","import axios from 'axios';\r\n\r\nconst QUES_RESTAPI_TO_RETREIVE_UNDONE='findbystatus/not-done';\r\n\r\nclass QuestionService{\r\n\r\n    getQuestions(){\r\n        return (axios.get(QUES_RESTAPI_TO_RETREIVE_UNDONE)) ;\r\n    }\r\n}\r\n\r\nexport default new QuestionService();\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport QuestionService from '../services/QuestionService';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ListQuestionComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n      \r\n        this.state={\r\n            question_array:[]\r\n        }\r\n       \r\n    }\r\n\r\n\r\n\r\n // After component is mounted   \r\ncomponentDidMount(){\r\n  QuestionService.getQuestions().then((resp)=>{\r\n      this.setState({question_array : resp.data});        // to set the response got into the array\r\n  });\r\n}\r\n\r\nupdatedata(event){\r\nvar ifds=event.target.value;\r\nvar lonk=\"/update-status/\"+ifds;\r\n\r\nconsole.log(lonk);\r\naxios.put(lonk).then(()=>console.log());\r\nwindow.location.reload(false);\r\n\r\n}\r\n\r\n\r\n//table table-striped table-bordered\r\n    render() {\r\n        return (\r\n          \r\n            <div>\r\n                <Link to=\"/Add\"><button type=\"button\" class=\"btn btn-primary\" >Add (+)</button></Link>\r\n               <h2 className=\"text-center\">Questions List</h2>                   \r\n                <div className=\"row\">\r\n                    <table className=\"table table-hover\">                   \r\n                       <thead>\r\n                           <tr>\r\n                                <th>Ques_ID</th>\r\n                                <th>Ques_Name</th>\r\n                                <th>Ques_Link</th>\r\n                                <th>Ques_Difficulty</th>\r\n                                <th>Ques_Status</th>\r\n                                <th>ACTION</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                \r\n                                this.state.question_array.map(                                 // mapping with key element id\r\n                                    question_array =>                                          // to iterate through the array question_array\r\n                                    <tr key={question_array.id}>\r\n                                        <td>{question_array.id}</td>\r\n                                        <td>{question_array.name}</td>\r\n                                        <td><a href={question_array.link} target=\"_blank\"> {question_array.link}</a></td>\r\n                                        <td>{question_array.diff}</td>\r\n                                        <td>{question_array.status}</td>\r\n                                        <td>\r\n                                         \r\n                                         <button style={{marginLeft: \"10px\"}} className=\"btn btn-success btn-sm\" onClick={this.updatedata.bind(this)} value={question_array.id}>Done</button>\r\n                                         <Link to={{pathname: \"/Update\"}}><button style={{marginLeft: \"10px\"}} className=\"btn btn-primary btn-sm\">Update</button></Link>\r\n                                         \r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListQuestionComponent;","import axios from 'axios';\r\n\r\nconst QUES_RESTAPI_TO_RETREIVE_ALL='/getall';\r\n\r\nclass QuestionService{\r\n\r\n    getAllQuestions(){\r\n        return (axios.get(QUES_RESTAPI_TO_RETREIVE_ALL)) ;\r\n    }\r\n}\r\n\r\nexport default new QuestionService();\r\n","import React, { Component } from 'react';\r\nimport QuestionService from '../services/QuestionServiceAllview';\r\n\r\nimport { Link } from 'react-router-dom';\r\nclass ListAllQuestionComponent extends Component {\r\n   // static history: PropTypes.object.isRequired;  \r\n    constructor(props) {\r\n        super(props);\r\n       \r\n        this.state={\r\n            question_array:[]\r\n        }\r\n        \r\n       // this.addQuestion = this.addQuestionF.bind(this);\r\n    }\r\n    \r\n // After component is mounted   \r\ncomponentDidMount(){\r\n  QuestionService.getAllQuestions().then((resp)=>{\r\n      this.setState({question_array : resp.data});        // to set the response got into the array\r\n  });\r\n}\r\n\r\n\r\n//table table-striped table-bordered\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to=\"/Add\"><button type=\"button\" class=\"btn btn-primary\" >Add (+)</button></Link>\r\n              \r\n                <h2 className=\"text-center\">Questions List</h2>                   \r\n                <div className=\"row\">\r\n                    <table className=\"table table-hover\">                   \r\n                       <thead>\r\n                           <tr>\r\n                                <th>Ques_ID</th>\r\n                                <th>Ques_Name</th>\r\n                                <th>Ques_Link</th>\r\n                                <th>Ques_Difficulty</th>\r\n                                <th>Ques_Status</th>\r\n                                <th>ACTION</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.question_array.map(                                 // mapping with key element id\r\n                                    question_array =>                                          // to iterate through the array question_array\r\n                                    <tr key={question_array.id}>\r\n                                        <td>{question_array.id}</td>\r\n                                        <td>{question_array.name}</td>\r\n                                        <td><a href={question_array.link} target=\"_blank\"> {question_array.link}</a></td>\r\n                                        <td>{question_array.diff}</td>\r\n                                        <td>{question_array.status}</td>\r\n                                        <td>\r\n                                        <Link to={{pathname: \"/Update\"}}><button style={{marginLeft: \"10px\"}} className=\"btn btn-primary btn-sm\">Update</button></Link>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListAllQuestionComponent;","import axios from 'axios';\r\n\r\nconst QUES_RESTAPI_TO_RETREIVE_DONE='/findbystatus/done';\r\n\r\nclass QuestionDoneService{\r\n\r\n    getDoneQuestions(){\r\n        return (axios.get(QUES_RESTAPI_TO_RETREIVE_DONE)) ;\r\n    }\r\n}\r\n\r\nexport default new QuestionDoneService();\r\n","import React, { Component } from 'react';\r\nimport QuestionDoneService from '../services/QuestionServiceDoneview';\r\nimport { Link } from 'react-router-dom';\r\nclass ListDoneQuestionComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            question_done_array:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        QuestionDoneService.getDoneQuestions().then((resp)=>{\r\n            this.setState({question_done_array : resp.data});        // to set the response got into the array\r\n        });\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to=\"/Add\"><button type=\"button\" class=\"btn btn-primary\" >Add (+)</button></Link>\r\n              \r\n                <h2 className=\"text-center\">Questions List</h2>                   \r\n                <div className=\"row\">\r\n                    <table className=\"table table-hover\">                   \r\n                       <thead>\r\n                           <tr>\r\n                                <th>Ques_ID</th>\r\n                                <th>Ques_Name</th>\r\n                                <th>Ques_Link</th>\r\n                                <th>Ques_Difficulty</th>\r\n                                <th>Ques_Status</th>\r\n                                <th>ACTION</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.question_done_array.map(                                 // mapping with key element id\r\n                                    question_done_array =>                                          // to iterate through the array question_array\r\n                                    <tr key={question_done_array.id}>\r\n                                        <td>{question_done_array.id}</td>\r\n                                        <td>{question_done_array.name}</td>\r\n                                        <td><a href={question_done_array.link} target=\"_blank\"> {question_done_array.link}</a></td>\r\n                                        <td>{question_done_array.diff}</td>\r\n                                        <td>{question_done_array.status}</td>\r\n                                        <td>\r\n                                        <Link to={{pathname: \"/Update\"}}><button style={{marginLeft: \"10px\"}} className=\"btn btn-primary btn-sm\">Update</button></Link>\r\n                                          </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ListDoneQuestionComponent;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass AddQuestion extends Component {\r\n    constructor(props) {\r\n        super(props);\r\nthis.state={\r\n    name:'',\r\n    link:'',\r\n    status:'',\r\n    diff:''\r\n};\r\n\r\nthis.changeName=this.changeName.bind(this);\r\nthis.changeLink=this.changeLink.bind(this);\r\nthis.changeStatus=this.changeStatus.bind(this);\r\nthis.changeDiff=this.changeDiff.bind(this);\r\n\r\n}\r\n\r\nchangeName=(event)=>{\r\n    this.setState({name:event.target.value});\r\n}\r\n\r\nchangeLink=(event)=>{\r\n    this.setState({link:event.target.value});\r\n}\r\n\r\nchangeStatus=(event)=>{\r\n    this.setState({status:event.target.value});\r\n}\r\n\r\nchangeDiff=(event)=>{\r\n    this.setState({diff:event.target.value});\r\n}\r\n\r\n\r\nsaveQuestion=(e)=>{\r\n\r\n    e.preventDefault();\r\n    let QuestoAdd={\r\n        name:this.state.name,\r\n        link:this.state.link,\r\n        status:this.state.status,\r\n        diff:this.state.diff\r\n    };\r\n    \r\n    console.log(JSON.stringify(QuestoAdd));\r\n\r\n    axios.post('/addQuestion',JSON.stringify(QuestoAdd),{\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      <Link to=\"/\"/>\r\n\r\n    \r\n    \r\n}\r\n\r\n \r\n\r\n    render() {\r\n        return (               \r\n            <div  >              \r\n             <div className=\"container\">\r\n                 <div className=\"row\">\r\n                     <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                         <br/><h3 className=\"text-center\">Add Question</h3>\r\n                         <div className=\"card-body\">\r\n                             <form className=\"form-group\">\r\n                             <label>\r\n                                     Question Name : \r\n                                 </label>\r\n                                 <input placeholder=\"Ques_Name\" name=\"Ques_name \" className=\"form-control\" values={this.state.name} onChange={this.changeName}></input>\r\n                                 <br/><label>\r\n                                     Question Link: \r\n                                 </label>\r\n                                 <input placeholder=\"Ques_Link\" name=\"Ques_link \" className=\"form-control\" values={this.state.link} onChange={this.changeLink}></input>\r\n                                <br/> <label>\r\n                                     Question Status: \r\n                                 </label>\r\n                                 <input placeholder=\"Ques_Status\" name=\"Ques_status \" className=\"form-control\" values={this.state.status} onChange={this.changeStatus}></input>\r\n                            \r\n                                <br/> <label>\r\n                                     Question Difficulty: \r\n                                 </label>\r\n                                 <input placeholder=\"Ques_Diff\" name=\"Ques_diff \" className=\"form-control\" values={this.state.diff} onChange={this.changeDiff}></input>\r\n                             <br/>\r\n                            <button className=\"btn btn-success\" onClick={this.saveQuestion}>Submit</button>\r\n                                  </form>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n             <br/><br/><br/>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default AddQuestion;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component ,useState,useParams} from 'react';\r\nimport axios from 'axios';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\n\r\nclass EditQuestionComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\nthis.state={\r\n    id:'',\r\n    name:'',\r\n    link:'',\r\n    status:'',\r\n    diff:''\r\n};\r\nthis.changeId=this.changeId.bind(this);\r\nthis.changeName=this.changeName.bind(this);\r\nthis.changeLink=this.changeLink.bind(this);\r\nthis.changeStatus=this.changeStatus.bind(this);\r\nthis.changeDiff=this.changeDiff.bind(this);\r\n\r\n\r\n}\r\n\r\n\r\nchangeId=(event)=>{\r\n    this.setState({id:event.target.value});\r\n}\r\n\r\nchangeName=(event)=>{\r\n    this.setState({name:event.target.value});\r\n}\r\n\r\nchangeLink=(event)=>{\r\n    this.setState({link:event.target.value});\r\n}\r\n\r\nchangeStatus=(event)=>{\r\n    this.setState({status:event.target.value});\r\n}\r\n\r\nchangeDiff=(event)=>{\r\n    this.setState({diff:event.target.value});\r\n}\r\n\r\n\r\nsaveQuestion=(e)=>{\r\n\r\n    e.preventDefault();\r\n    let QuestoAdd={\r\n        id:this.state.id,\r\n        name:this.state.name,\r\n        link:this.state.link,\r\n        status:this.state.status,\r\n        diff:this.state.diff\r\n    };\r\n    \r\n    console.log(JSON.stringify(QuestoAdd));\r\n\r\n\r\n    axios.put('/update',JSON.stringify(QuestoAdd),{\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n    \r\n\r\n    \r\n    \r\n}\r\n\r\n \r\n\r\n    render() {\r\n        \r\n        return (               \r\n            <div  >              \r\n             <div className=\"container\">\r\n                 <div className=\"row\">\r\n                     <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                         <br/><h3 className=\"text-center\">Update Question</h3>\r\n                         <div className=\"card-body\">\r\n                             <form className=\"form-group\">\r\n                             <label>\r\n                                     Question Id : \r\n                                 </label>\r\n                                 <input placeholder=\"Ques_Id\" name=\"Ques_id \" className=\"form-control\" values={this.state.id} onChange={this.changeId}></input>\r\n                                 <br/>\r\n                             <label>\r\n                                     Question Name : \r\n                                 </label>\r\n                                 <input placeholder=\"Ques_Name\" name=\"Ques_name \" className=\"form-control\" values={this.state.name} onChange={this.changeName}></input>\r\n                                 <br/><label>\r\n                                     Question Link: \r\n                                 </label>\r\n                                 <input placeholder=\"Ques_Link\" name=\"Ques_link \" className=\"form-control\" values={this.state.link} onChange={this.changeLink}></input>\r\n                                <br/> <label>\r\n                                     Question Status: \r\n                                 </label>\r\n                                 <input placeholder=\"Ques_Status\" name=\"Ques_status \" className=\"form-control\" values={this.state.status} onChange={this.changeStatus}></input>\r\n                            \r\n                                <br/> <label>\r\n                                     Question Difficulty: \r\n                                 </label>\r\n                                 <input placeholder=\"Ques_Diff\" name=\"Ques_diff \" className=\"form-control\" values={this.state.diff} onChange={this.changeDiff}></input>\r\n                             <br/>\r\n                            <button className=\"btn btn-success\" onClick={this.saveQuestion}>Submit</button>\r\n                                  </form>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n             <br/><br/><br/>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default EditQuestionComponent;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","//import logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router,Link,Route,Switch} from 'react-router-dom';\nimport FooterComponent from './components/FooterComponent';\nimport HeaderComponent from './components/HeaderComponent';\nimport ListQuestionComponent from './components/ListQuestionComponent';\nimport ListAllQuestionComponent from  './components/ListAllQuestionComponent';\nimport ListDoneQuestionComponent from './components/ListDoneQuestionComponent';\nimport AddQuestion from './components/AddQuestion';\nimport EditQuestionComponent from './components/EditQuestionComponent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <HeaderComponent/>\n         <div className=\"container\">\n             <Switch>\n             <Route exact path=\"/\"><ListQuestionComponent/></Route> \n             <Route path=\"/All\" ><ListAllQuestionComponent/></Route>\n             <Route path=\"/Add\" ><AddQuestion /></Route>\n             <Route path=\"/Done\"><ListDoneQuestionComponent/></Route>\n             <Route path=\"/Update\"><EditQuestionComponent/></Route>\n            \n             </Switch>\n         </div>\n        <FooterComponent/>\n        </Router>\n    </div>\n  );\n}\n\nexport default App ;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}